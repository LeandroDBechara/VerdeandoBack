<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cambio de Contrase√±a - Verdeando</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            padding: 40px;
            width: 100%;
            max-width: 500px;
            text-align: center;
        }

        .logo {
            margin-bottom: 30px;
        }

        .logo h1 {
            color: #2c5530;
            font-size: 2.5rem;
            margin-bottom: 10px;
        }

        .logo p {
            color: #666;
            font-size: 1.1rem;
        }

        .step {
            display: none;
            animation: fadeIn 0.5s ease-in;
        }

        .step.active {
            display: block;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .form-group {
            margin-bottom: 20px;
            text-align: left;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #333;
            font-weight: 600;
            font-size: 0.9rem;
        }

        input {
            width: 100%;
            padding: 15px;
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        input:focus {
            outline: none;
            border-color: #4CAF50;
            box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
        }

        .btn {
            background: linear-gradient(45deg, #4CAF50, #45a049);
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            margin-top: 10px;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(76, 175, 80, 0.3);
        }

        .btn:disabled {
            background: #ccc;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .btn-secondary {
            background: linear-gradient(45deg, #6c757d, #5a6268);
        }

        .btn-secondary:hover {
            box-shadow: 0 10px 20px rgba(108, 117, 125, 0.3);
        }

        .error-message {
            color: #d32f2f;
            background: #ffebee;
            padding: 10px;
            border-radius: 8px;
            margin: 10px 0;
            font-size: 0.9rem;
            display: none;
        }

        .success-message {
            color: #2e7d32;
            background: #e8f5e8;
            padding: 15px;
            border-radius: 8px;
            margin: 20px 0;
            font-size: 1rem;
        }

        .password-requirements {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            margin: 15px 0;
            text-align: left;
        }

        .password-requirements h4 {
            color: #333;
            margin-bottom: 10px;
            font-size: 0.9rem;
        }

        .requirement {
            color: #666;
            font-size: 0.8rem;
            margin: 5px 0;
            display: flex;
            align-items: center;
        }

        .requirement.valid {
            color: #4CAF50;
        }

        .requirement.invalid {
            color: #d32f2f;
        }

        .requirement::before {
            content: '‚óè';
            margin-right: 8px;
            font-size: 1.2rem;
        }

        .requirement.valid::before {
            content: '‚úì';
            color: #4CAF50;
        }

        .requirement.invalid::before {
            content: '‚úó';
            color: #d32f2f;
        }

        .back-link {
            color: #4CAF50;
            text-decoration: none;
            font-size: 0.9rem;
            margin-top: 20px;
            display: inline-block;
        }

        .back-link:hover {
            text-decoration: underline;
        }

        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid #f3f3f3;
            border-top: 3px solid #4CAF50;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-right: 10px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @media (max-width: 600px) {
            .container {
                padding: 30px 20px;
                margin: 20px;
            }
            
            .logo h1 {
                font-size: 2rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="logo">
            <h1>üå± Verdeando</h1>
            <p>Cambio de Contrase√±a</p>
        </div>

        <!-- Paso 1: Validando Token -->
        <div id="step1" class="step active">
            <h2 style="margin-bottom: 20px; color: #333;">Validando tu enlace de recuperaci√≥n</h2>
            <p style="color: #666; margin-bottom: 30px; line-height: 1.6;">
                Estamos validando tu enlace de recuperaci√≥n...
            </p>
            
            <div style="text-align: center; padding: 40px;">
                <div class="loading" style="width: 40px; height: 40px; border-width: 4px; margin: 0 auto 20px;"></div>
                <p style="color: #666;">Validando token...</p>
            </div>

            <div class="error-message" id="tokenError"></div>

            <a href="#" class="back-link" onclick="showHelp()">¬øNo recibiste el correo?</a>
        </div>

        <!-- Paso 2: Cambiar Contrase√±a -->
        <div id="step2" class="step">
            <h2 style="margin-bottom: 20px; color: #333;">Cambia tu contrase√±a</h2>
            <p style="color: #666; margin-bottom: 30px;">
                Ingresa tu nueva contrase√±a. Aseg√∫rate de que sea segura.
            </p>

            <div class="form-group">
                <label for="newPassword">Nueva contrase√±a:</label>
                <input type="password" id="newPassword" placeholder="Ingresa tu nueva contrase√±a" />
            </div>

            <div class="form-group">
                <label for="confirmPassword">Confirmar contrase√±a:</label>
                <input type="password" id="confirmPassword" placeholder="Confirma tu nueva contrase√±a" />
            </div>

            <div class="password-requirements">
                <h4>Requisitos de la contrase√±a:</h4>
                <div class="requirement" id="lengthReq">M√≠nimo 8 caracteres</div>
                <div class="requirement" id="uppercaseReq">Al menos una may√∫scula</div>
                <div class="requirement" id="lowercaseReq">Al menos una min√∫scula</div>
                <div class="requirement" id="numberReq">Al menos un n√∫mero</div>
            </div>

            <div class="error-message" id="passwordError"></div>

            <button class="btn" onclick="changePassword()">
                <span id="passwordBtnText">Cambiar Contrase√±a</span>
                <span id="passwordLoading" class="loading" style="display: none;"></span>
            </button>

            <button class="btn btn-secondary" onclick="goBack()" style="margin-top: 15px;">
                Volver
            </button>
        </div>

        <!-- Paso 3: √âxito -->
        <div id="step3" class="step">
            <div class="success-message">
                <h2 style="color: #2e7d32; margin-bottom: 15px;">¬°Contrase√±a cambiada exitosamente!</h2>
                <p>Tu contrase√±a ha sido actualizada. Ya puedes iniciar sesi√≥n con tu nueva contrase√±a.</p>
            </div>
        </div>
    </div>

    <script>
        let currentToken = '';
        let currentUserId = '';

        // Funci√≥n para extraer y validar token de la URL
        async function extractAndValidateToken() {
            try {
                // Buscar token en diferentes formatos de URL
                let token = null;
                
                // Formato 1: ?token=abc123 (query parameter)
                const urlParams = new URLSearchParams(window.location.search);
                token = urlParams.get('token');
                
                // Formato 2: /reset-password/abc123 (path parameter - formato del correo)
                if (!token) {
                    const pathParts = window.location.pathname.split('/');
                    const resetPasswordIndex = pathParts.findIndex(part => part === 'reset-password');
                    if (resetPasswordIndex !== -1 && pathParts[resetPasswordIndex + 1]) {
                        token = pathParts[resetPasswordIndex + 1];
                    }
                }
                
                // Formato 3: /token/abc123 (path parameter alternativo)
                if (!token) {
                    const pathParts = window.location.pathname.split('/');
                    const tokenIndex = pathParts.findIndex(part => part === 'token');
                    if (tokenIndex !== -1 && pathParts[tokenIndex + 1]) {
                        token = pathParts[tokenIndex + 1];
                    }
                }

                if (!token) {
                    throw new Error('No se encontr√≥ un token v√°lido en la URL');
                }

                console.log('Token extra√≠do:', token);
                console.log('URL actual:', window.location.href);
                console.log('Pathname:', window.location.pathname);

                // Decodificar el JWT para obtener el userId
                const payload = JSON.parse(atob(token.split('.')[1]));
                console.log('Payload del token:', payload);
                currentUserId = payload.id;
                currentToken = token;
                
                // Simular validaci√≥n del token (en producci√≥n esto se har√≠a con la API)
                await new Promise(resolve => setTimeout(resolve, 1500));
                
                showStep(2);
            } catch (error) {
                console.error('Error al validar token:', error);
                showError('tokenError', 'Enlace inv√°lido o expirado. Por favor solicita uno nuevo.');
            }
        }

        // Funci√≥n para cambiar la contrase√±a
        async function changePassword() {
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;

            if (!validatePassword(newPassword, confirmPassword)) {
                return;
            }

            showLoading('password');
            hideError('passwordError');

            try {
                // Llamada a la API para cambiar la contrase√±a
                const response = await fetch('/auth/reset-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${currentToken}`
                    },
                    body: JSON.stringify({
                        password: newPassword,
                        confirmPassword: confirmPassword
                    })
                });

                if (response.ok) {
                    hideLoading('password');
                    showStep(3);
                } else {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'Error al cambiar la contrase√±a');
                }
            } catch (error) {
                hideLoading('password');
                showError('passwordError', error.message || 'Error al cambiar la contrase√±a');
            }
        }

        // Funci√≥n para validar la contrase√±a
        function validatePassword(password, confirmPassword) {
            if (password !== confirmPassword) {
                showError('passwordError', 'Las contrase√±as no coinciden');
                return false;
            }

            if (password.length < 8) {
                showError('passwordError', 'La contrase√±a debe tener al menos 8 caracteres');
                return false;
            }

            // Validar requisitos
            const requirements = {
                lengthReq: password.length >= 8,
                uppercaseReq: /[A-Z]/.test(password),
                lowercaseReq: /[a-z]/.test(password),
                numberReq: /\d/.test(password)
            };

            Object.keys(requirements).forEach(req => {
                const element = document.getElementById(req);
                if (requirements[req]) {
                    element.classList.add('valid');
                    element.classList.remove('invalid');
                } else {
                    element.classList.add('invalid');
                    element.classList.remove('valid');
                }
            });

            if (Object.values(requirements).every(req => req)) {
                hideError('passwordError');
                return true;
            } else {
                showError('passwordError', 'La contrase√±a no cumple con todos los requisitos');
                return false;
            }
        }

        // Funci√≥n para mostrar un paso espec√≠fico
        function showStep(stepNumber) {
            document.querySelectorAll('.step').forEach(step => step.classList.remove('active'));
            document.getElementById(`step${stepNumber}`).classList.add('active');
        }

        // Funci√≥n para volver al paso anterior
        function goBack() {
            showStep(1);
            document.getElementById('newPassword').value = '';
            document.getElementById('confirmPassword').value = '';
            hideError('passwordError');
        }


        // Funci√≥n para mostrar ayuda
        function showHelp() {
            alert('Si no recibiste el correo de recuperaci√≥n:\n\n1. Revisa tu carpeta de spam\n2. Verifica que el correo est√© correcto\n3. Contacta al soporte t√©cnico');
        }

        // Funciones de utilidad
        function showError(elementId, message) {
            const element = document.getElementById(elementId);
            element.textContent = message;
            element.style.display = 'block';
        }

        function hideError(elementId) {
            document.getElementById(elementId).style.display = 'none';
        }

        function showLoading(type) {
            document.getElementById(`${type}BtnText`).style.display = 'none';
            document.getElementById(`${type}Loading`).style.display = 'inline-block';
            document.querySelector(`#step2 .btn`).disabled = true;
        }

        function hideLoading(type) {
            document.getElementById(`${type}BtnText`).style.display = 'inline';
            document.getElementById(`${type}Loading`).style.display = 'none';
            document.querySelector(`#step2 .btn`).disabled = false;
        }

        // Validaci√≥n en tiempo real de la contrase√±a
        document.getElementById('newPassword').addEventListener('input', function() {
            const password = this.value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            
            if (confirmPassword) {
                validatePassword(password, confirmPassword);
            }
        });

        document.getElementById('confirmPassword').addEventListener('input', function() {
            const password = document.getElementById('newPassword').value;
            const confirmPassword = this.value;
            
            if (password) {
                validatePassword(password, confirmPassword);
            }
        });

        // Inicializar la p√°gina
        document.addEventListener('DOMContentLoaded', function() {
            extractAndValidateToken();
        });
    </script>
</body>
</html>